# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Pipeline test CI
# coloca na parte on o evento que vai fazer disparar o workflow (ação no repositório que ativa)
on:
  push:
    branches: [ "main" ]   #condições que entram na condição para disparar o workflow (só se for push na main)
  pull_request:
    branches: [ "main" ] #condições que entram na condição para disparar o workflow (só se for PR na main)
  schedule:
    - cron: '0 12 * * *'  # Isso vai rodar todo dia às 12:00 PM UTC (9:00 AM BRT)
  workflow_dispatch:  # Permite rodar manualmente
  
# No jobs antes do passo a passo se coloca a conf de maquina
jobs:
  build:
    runs-on: ubuntu-latest #maquina virtual que sera executado o workflow 
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
# Aqui são os passo a passo que tem dentro do Jobs - configurações do job 
    steps:
    - uses: actions/checkout@v4 #ter acesso ao git e conseguir navegar no projeto tranquilamente e clona na maquina virtual
    - name: Use Node.js ${{ matrix.node-version }} 
      uses: actions/setup-node@v4 # setup do node (instalação) 
      with:
        node-version: ${{ matrix.node-version }} #versao que sera usada
    - run: npm install
    
    # Criação da pasta de relatório
    - name: Criar pasta de relatório
      run: mkdir -p ./cypress/reports/mochawesome
    - name: Execução dos testes Cypress
      run: npx cypress run --reporter mochawesome --reporter-options reportDir=./cypress/reports/mochawesome,overwrite=true,html=true,json=true
      ###############################
      # mescla os relatórios Mochawesome se tiver varios arquivos no formato JSON
    - name: Merge dos relatórios Mochawesome em formato JSON
      run: |
        npx mochawesome-merge ./cypress/reports/mochawesome/*.json > ./cypress/reports/mochawesome/merged-report.json

    - name: Lista de arquivos gerados
      run: ls ./cypress/reports/mochawesome

    # Extração e exibição dos resultados na tabela (PASS, FAIL, 
    - name: Gerando exibição dos resultados dos testes
      run: |
        PASS=$(jq '.stats.passes' ./cypress/reports/mochawesome/merged-report.json)
        FAIL=$(jq '.stats.failures' ./cypress/reports/mochawesome/merged-report.json)
        TOTAL=$(($PASS + $FAIL))
        echo "Results Summary"
        echo "| Status   | Contabilização |"
        echo "|----------|-------|"
        echo "| Passed   | $PASS  |"
        echo "| Failed   | $FAIL  |"
        echo "| Total    | $TOTAL |"
      
    ###################################
       # Arquivando os relatórios gerados
    - name: Armazenando relatório Mochawesome
      uses: actions/upload-artifact@v3
      with:
        name: mochawesome-report
        path: ./cypress/reports/mochawesome
